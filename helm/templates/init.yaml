{{- $chiaRoot := "/mnt/chia" }}
{{- $secretName := printf "%s-ca" .Values.network }}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.network }}-init
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "-10"  # 低い値が先に実行される
spec:
  template:
    metadata:
      name: {{ .Values.network }}-init
      labels:
        app: chia
    spec:
      serviceAccountName: {{ .Values.serviceAccount }}
      restartPolicy: OnFailure
      volumes:
      - name: chia-ssl
        emptyDir: {}
      
      initContainers:
      - name: chia-init
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        env:
        - name: CHIA_ROOT
          value: {{ $chiaRoot }}
        command:
        - /bin/sh
        - -c
        - |
          chia init
          chmod -R a+r {{ $chiaRoot }}
        volumeMounts:
        - name: chia-ssl
          mountPath: {{ $chiaRoot }}
      
      containers:
      - name: kubectl
        image: bitnami/kubectl:latest
        command:
        - /bin/sh
        - -c
        - |
          if kubectl get secret {{ $secretName }}; then
            echo "Secret already exists. Skipping creation."
          else
            kubectl create secret generic {{ $secretName }} \
              --from-file={{ $chiaRoot }}/config/ssl/ca/chia_ca.crt \
              --from-file={{ $chiaRoot }}/config/ssl/ca/chia_ca.key \
              --from-file={{ $chiaRoot }}/config/ssl/ca/private_ca.crt \
              --from-file={{ $chiaRoot }}/config/ssl/ca/private_ca.key
          fi
        volumeMounts:
        - name: chia-ssl
          mountPath: {{ $chiaRoot }}
